// <auto-generated />
using System;
using BPR.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BPR.API.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BPR.Models.Administrator", b =>
                {
                    b.Property<int>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AdministratorEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdministratorFirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("AdministratorPhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("AdministratorSurname")
                        .HasColumnType("text");

                    b.HasKey("AdministratorId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("BPR.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdministratorId")
                        .HasColumnType("integer");

                    b.Property<bool>("AppointmentCancelled")
                        .HasColumnType("boolean");

                    b.Property<int>("AppointmentCategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AppointmentDateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("AppointmentEndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("AppointmentEndTimeExpected")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("AppointmentStartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("BPR.Models.AppointmentCategory", b =>
                {
                    b.Property<int>("AppointmentCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AppointmentCategoryDuration")
                        .HasColumnType("integer");

                    b.Property<string>("AppointmentCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("AppointmentCategoryId");

                    b.ToTable("AppointmentCategories");
                });

            modelBuilder.Entity("BPR.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CustomerAccountCreation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomerCity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CustomerCountry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CustomerIdNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerPassportNumber")
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("CustomerPostalCode")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<bool>("CustomerRegistered")
                        .HasColumnType("boolean");

                    b.Property<string>("CustomerStreetName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CustomerStreetNumber")
                        .HasColumnType("text");

                    b.Property<string>("CustomerSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BPR.Models.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FacilityDescription")
                        .HasColumnType("text");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KamtjatkaInfoId")
                        .HasColumnType("integer");

                    b.HasKey("FacilityId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("BPR.Models.Finance", b =>
                {
                    b.Property<int>("FinanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("FinanceAmountOfMoney")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FinanceCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("FinanceDescription")
                        .HasColumnType("text");

                    b.Property<string>("FinanceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("FinanceId");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("BPR.Models.FinanceCategory", b =>
                {
                    b.Property<int>("FinanceCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FinanceCategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("FinanceCategoryId");

                    b.ToTable("FinanceCategories");
                });

            modelBuilder.Entity("BPR.Models.KamtjatkaInfo", b =>
                {
                    b.Property<int>("KamtjatkaInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdministratorId")
                        .HasColumnType("integer");

                    b.Property<string>("KamtjatkaInfoCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("KamtjatkaInfoCountry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("KamtjatkaInfoPostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("KamtjatkaInfoStreetName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("KamtjatkaInfoStreetNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KamtjatkaInforPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.HasKey("KamtjatkaInfoId");

                    b.ToTable("KamtjatkaInfos");
                });

            modelBuilder.Entity("BPR.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RoomCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("BPR.Models.RoomBooking", b =>
                {
                    b.Property<int>("RoomBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("RoomBookingId");

                    b.ToTable("RoomBookings");
                });

            modelBuilder.Entity("BPR.Models.RoomCategory", b =>
                {
                    b.Property<int>("RoomCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("RoomCategoryDeposit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomCategoryDescription")
                        .HasColumnType("text");

                    b.Property<string>("RoomCategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomCategoryNumberOfRooms")
                        .HasColumnType("integer");

                    b.Property<int>("RoomCategoryPictureLink")
                        .HasColumnType("integer");

                    b.Property<string>("RoomCategoryRentPrice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomCategoryUtilities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoomCategoryId");

                    b.ToTable("RoomCategories");
                });

            modelBuilder.Entity("BPR.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdministratorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ScheduleFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ScheduleTo")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
